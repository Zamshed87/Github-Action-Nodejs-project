name: Docker Build & Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: zamshed/Github-Action-Nodejs-project   # <--- your Docker Hub repo
  CONTAINER_NAME: Github-Action-Nodejs-project-container
  HOST_PORT: 8080
  CONTAINER_PORT: 80

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: [self-hosted, ibos4]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build \
            --network=host \
            -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} \
            -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Push Docker image
        run: |
          docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy:
    name: Deploy Application
    runs-on: [self-hosted, ibos4]
    needs: build

    steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Stop and remove existing container (if any)
        run: |
          if [ $(docker ps -q -f name=${{ env.CONTAINER_NAME }}) ]; then
            docker stop ${{ env.CONTAINER_NAME }}
            docker rm ${{ env.CONTAINER_NAME }}
          fi

      - name: Pull latest image from Docker Hub
        run: docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Run container
        run: |
          docker run -d --name ${{ env.CONTAINER_NAME }} -p ${{ env.HOST_PORT }}:${{ env.CONTAINER_PORT }} ${{ env.DOCKER_IMAGE_NAME }}:latest
